name: Build and Push Dynamic Dockerfile

on:
  push:
    paths:
      - '**/Dockerfile'  # 모든 디렉토리의 Dockerfile에 대한 변경 감지

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      # 1. 저장소 체크아웃
      - name: Checkout repository
        uses: actions/checkout@v2

      # 2. Dockerfile 경로 추출
      - name: Get Dockerfile path
        id: get_dockerfile
        run: |
          FILE_PATH=$(echo "${{ github.event.head_commit.modified }}" | grep -o '[^"]*Dockerfile')
          IMAGE_NAME=$(echo "$FILE_PATH" | sed 's/\/Dockerfile//' | tr '/' '-')
          echo "DOCKERFILE_PATH=$FILE_PATH" >> $GITHUB_ENV
          echo "IMAGE_NAME=jodog0412/$IMAGE_NAME" >> $GITHUB_ENV

      # 3. Docker 메타데이터 생성
      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: ${{ env.IMAGE_NAME }}
          tag-semver: |
            {{version}}
            {{major}}.{{minor}}

      # 4. Docker Buildx 설정
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # 5. Docker Hub 로그인
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 6. Docker 이미지 빌드 및 푸시
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: ${{ env.DOCKERFILE_PATH }}
          file: ${{ env.DOCKERFILE_PATH }}
          platforms: linux/amd64
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
